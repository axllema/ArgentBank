swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
### Ajout & changements des définitions d'objets - dans api/v2
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user username
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionCategoryUpdate:
    properties:
      category:
        type: string
        description: New category for the transaction
  TransactionDescriptionUpdate:
    properties:
      description:
        type: string
        description: New description for the transaction
  TransactionPost:
    properties:
      id:
        type: string
        description: Unique transaction ID
      amount:
        type: number
        description: Transaction amount
      category:
        type: string
        description: Transaction category
      description:
        type: string
        description: Transaction description
      date:
        type: string
        description: Transaction date
      type:
        type: string
        description: Transaction type
  TransactionDelete:
    properties:
      id:
        type: string
        description: Unique transaction ID
  SortByCategoryResponse:
    properties:
      sortedByTransactions:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            amount:
              type: number
            category:
              type: string
            description:
              type: string
            date:
              type: string
            type:
              type: string
  Transaction:
    properties:
      id:
        type: string
        description: Unique transaction ID
      amount:
        type: number
        description: Transaction amount
      category:
        type: string
        description: Transaction category
      description:
        type: string
        description: Transaction description
      date:
        type: string
        description: Transaction date
      type:
        type: string
        description: Transaction type

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

### Nouvelles routes ajoutées - dans api/v2
  ## Route pour récupérer les transactions du mois en cours.
  /accounts/{accountID}/transactions/current:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Fetch current month transactions
      description: Fetch transactions for the current month.
      parameters:
        - in: path
          name: accountID
          description: Unique account ID
          required: true
          type: string
          
      ## Ajout d'une option de fonctionnalité de tri des transactions par catégorie
        - in: query
          name: sortByCategory
          description: Sort transactions by category (optional)
          required: false
          type: boolean
            #  Example request for sorting by category:
              # ?sortByCategory=true&category=category-name
        - in: query
          name: category
          description: Category to filter transactions (optional)
          required: false
          type: string
        - in: query
          name: startDate
          description: Start date for filtering transactions (optional)
          required: false
          type: string
        - in: query
          name: endDate
          description: End date for filtering transactions (optional)
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions fetched successfully for the current month
          schema:
            $ref: '#/definitions/SortByCategoryResponse'
          examples:
            application/json:
              status: 200
              message: Transactions fetched successfully
        '400':
          description: Bad request - Invalid fields
          examples:
            application/json:
              status: 400
              message: Invalid fields
        '401':
          description: Unauthorized - Authentication failed
          examples:
            application/json:
              status: 401
              message: Token is missing from header
        '404':
          description: No transaction found for the specified month and account
          examples:
            application/json:
              status: 404
              message: No transaction found
        '500':
          description: Internal Server Error - Something went wrong
          examples:
            application/json:
              status: 500
              message: Internal Server Error
            x-code-samples:
              - lang: shell
                label: cURL
                source: |
                  curl -X GET "http://localhost:3001/api/v2/accounts/{accountID}/transactions/current?sortByCategory=true&category=category-name" -H "Authorization: Bearer <token>" -H "Content-Type: application/json"

  ## Changer la catégorie d'une transaction spécifique
  /accounts/{accountID}/transactions/{transactionID}/category:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update category of a specific transaction
      description: Update category of a specific transaction.
      parameters:
        - in: path
          name: accountID
          description: Unique account ID
          required: true
          type: string
        - in: path
          name: transactionID
          description: Unique transaction ID
          required: true
          type: string
        - in: body
          name: transactionUpdate
          description: New category for the transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionCategoryUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction category updated successfully
          schema:
            $ref: '#/definitions/SortByCategoryResponse'
          examples:
            application/json:
              sortedByTransactions: 
                - id: "123"
                  amount: 100.0
                  category: "Food"
        '400':
          description: Bad request - Invalid fields
        '401':
          description: Unauthorized - Authentication failed
        '404':
          description: Transaction or Account not found
        '500':
          description: Internal Server Error - Something went wrong
          examples:
            application/json:
              status: 500
              message: Internal Server Error

  ## Ajout de description/note à une transaction :
  /accounts/{accountID}/transactions/{transactionID}/description:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update description of a specific transaction
      description: Update description of a specific transaction.
      parameters:
        - in: path
          name: accountID
          description: Unique account ID
          required: true
          type: string
        - in: path
          name: transactionID
          description: Unique transaction ID
          required: true
          type: string
        - in: body
          name: transactionUpdate
          description: New description for the transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionDescriptionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction descriptio updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Bad request - Invalid fields
        '401':
          description: Unauthorized - Authentication failed
        '404':
          description: Transaction or Account not found
        '500':
          description: Internal Server Error - Something went wrong

  ## Route pour récupérer les détails d'une transaction spécifique et mise à jour des détails d'une transaction.
  /accounts/{accountID}/transactions/{transactionID}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Fetch details of a specific transaction
      description: Fetch details from a specific transaction.
      parameters:
        - in: path
          name: accountID
          description: Unique account ID
          required: true
          type: string
        - in: path
          name: transactionID
          description: Unique transaction ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details fetched successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Bad request - Invalid fields
        '401':
          description: Unauthorized - Authentification failed
        '404':
          description: Transaction or Account not found
        '500':
          description: Internal Server Error - Something went wrong

    # Ajouter une transaction
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Post a new specific transaction
      description: Add a new specific transaction
      parameters:
        - in: path
          name: accountID
          description: Unique account ID
          required: true
          type: string
        - in: path
          name: transactionID
          description: Unique transaction ID
          required: true
          type: string
        - in: body
          name: transactionID
          description: Details of the new transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionPost'
      produces:
        - application/json
      responses:
        '200':
          description: New transaction created successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Bad request - Invalid fields
        '401':
          description: Unauthorized - Authentication failed
        '404':
          description: Transaction or Account not found
        '500':
          description: Internal Server Error - Something went wrong
    
    # Supprimer une transaction
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete a specific transaction
      description: Delete a specific transaction.
      parameters:
        - in: path
          name: accountID
          description: Unique account ID
          required: true
          type: string
        - in: path
          name: transactionID
          description: Unique transaction ID
          required: true
          type: string
        - in: body
          name: transactionID
          description: Details of the transaction to be deleted
          required: true
          schema:
            $ref: '#/definitions/TransactionDelete'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction deleted successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Bad request - Invalid fields
        '401':
          description: Unauthorized - Authentication failed
        '404':
          description: Transaction or Account not found
        '500':
          description: Internal Server Error - Something went wrong